name: Docker Build and Publish

on:
  workflow_dispatch:


jobs:
  release-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract version
        id: version
        run: |
          # Default to 'dev' for non-tag builds
          VERSION=dev
          
          # If this is a tag, use the tag name without the 'v' prefix
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ${{ github.ref_type == 'tag' && format('ghcr.io/{0}:{1}', github.repository, steps.version.outputs.VERSION) || '' }}
          build-args: |
            VERSION=${{ steps.version.outputs.VERSION }}
          labels: |
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
            org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}

  release-helm:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        # fetch-tags: true - from experience, this usually results in errors
        # > Also see: https://github.com/actions/checkout/issues/1467

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: ./charts

      - name: Add commit digest to GH release
        run: |
          git fetch --tags
          LAST_TAG=$(git tag --list 'cert-manager-webhook-inwx*' --sort=-v:refname | sed -n '2p')
          CURRENT_TAG=$(git tag --list 'cert-manager-webhook-inwx*' --sort=-v:refname | sed -n '1p')
          COMMITS=$(git log --oneline ${LAST_TAG}..${CURRENT_TAG} | sed 's/^/- /')
          
          # Workaround to get newlines working
          echo -e "### Changes since \`${LAST_TAG}\`\n\n${COMMITS}" > msg
          gh release edit ${CURRENT_TAG} --notes "$(cat msg)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}